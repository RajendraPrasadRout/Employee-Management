@model MyWebApplicationCRUD.Models.EmployeeRecords
@{
    ViewData["Title"] = "Register";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
@using (Html.BeginForm("Register", "Employee", FormMethod.Post))
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card border-primary rounded-3">
                    <div class="card-body">
                        <h1 class="card-title text-center mb-4">Register</h1>

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, "Name")
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, "Email")
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Phone, "Phone")
                                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", required = "required", maxlength = "10" })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Designation, "Designation")
                                    @Html.TextBoxFor(model => model.Designation, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, "Address")
                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserId, "User ID")
                                    @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password)
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.Label("Confirm Password")
                                    @Html.Password("ConfirmPassword", null, new { @class = "form-control", required = "required" })
                                    <span id="confirmPasswordError" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row justify-content-center" style="margin-top: 10px; text-align:center;">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.UserType, new SelectList(new[]
                                {
                                new SelectListItem { Value = "hr", Text = "HR" },
                                new SelectListItem { Value = "normal", Text = "Normal User" }
                                }, "Value", "Text"), "-- SELECT USER TYPE --", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row justify-content-center">
                            <div class="col-md-6">
                                <div class="form-group text-center">
                                    <button type="submit" class="btn btn-primary" style="margin-top: 10px;"><span class="bi bi-plus"></span> Register</button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="goBack()" style="margin-top: 10px; margin-left: 10px;"><span class="bi bi-arrow-left-short"></span> Back</button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function validatePasswordMatch() {
            var password = document.getElementById("Password").value;
            var confirmPassword = document.getElementById("ConfirmPassword").value;
            var errorSpan = document.getElementById("confirmPasswordError");

            if (password !== confirmPassword) {
                errorSpan.innerText = "The password and confirmation password do not match.";
            } else {
                errorSpan.innerText = "";
            }
        }

        function goBack() {
            window.history.back();
        }

        document.getElementById("Password").addEventListener("input", validatePasswordMatch);
        document.getElementById("ConfirmPassword").addEventListener("input", validatePasswordMatch);
    </script>
}
